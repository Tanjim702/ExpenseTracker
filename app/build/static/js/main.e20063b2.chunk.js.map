{"version":3,"sources":["context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["AppReducer","state","action","type","console","log","loading","transactions","payload","error","filter","trans","_id","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","Math","floor","random","className","htmlFor","onChange","target","placeholder","parseFloat","Balance","total","map","item","balance","length","reduce","acc","Header","IncomeExpense","amounts","n","income","expense","forEach","TransactionList","useEffect","transaction","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e20063b2.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\n//Reducer\n\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'GET_TRANSACTIONS':\n            console.log(state)\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case 'DELETE':\n            return {\n                ...state,\n                transactions: state.transactions.filter(trans => trans._id !== action.payload)\n            }\n        case 'ADD':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n        default:\n            return state\n    }\n}\n\n\n\n\n\n\n\n\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n};\n//Create context\nexport const GlobalContext = createContext(initialState)\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    //Actions\n\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/');\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            })\n        } catch (err) {\n            dispatch({\n                type: 'ERROR',\n                payload: err.response.data.error,\n            })\n        }\n    }\n    async function deleteTransaction(id) {\n        await axios.delete(`/api/v1/${id}`)\n        try {\n            dispatch({\n                type: 'DELETE',\n                payload: id,\n            })\n\n        } catch (error) {\n            dispatch({\n                type: 'ERROR',\n                payload: error.response.data.error,\n            })\n        }\n    }\n    async function addTransaction(trans) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/v1/', trans, config)\n            dispatch({\n                type: 'ADD',\n                payload: trans,\n            })\n\n        } catch (err) {\n            dispatch({\n                type: 'ERROR',\n                payload: err.response.data.error,\n            })\n        }\n    }\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            loading: state.loading,\n            error: state.error,\n            getTransactions,\n\n            deleteTransaction,\n            addTransaction,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}","import { GlobalContext } from \"../context/GlobalState\";\nimport { useContext } from \"react\";\nimport { useState } from 'react'\nfunction AddTransaction() {\n  const [text, setText] = useState('')\n  const [amount, setAmount] = useState('')\n  const { addTransaction } = useContext(GlobalContext)\n  return (\n\n    <div >\n      <h3>Add new transaction</h3>\n      <form id=\"form\" onSubmit={(e) => {\n        e.preventDefault();\n        addTransaction({\n          id: Math.floor(Math.random() * 1000000000),\n          text,\n          amount\n        });\n        setText('');setAmount('')\n      }} >\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input value={text} onChange={e => setText(e.target.value)}\n            type=\"text\" id=\"text\" placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n          >Amount <br />\n              (negative - expense, positive - income)</label\n          >\n          <input value={amount} onChange={e => setAmount(parseFloat(e.target.value))} type=\"number\" id=\"amount\" placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;","import { GlobalContext } from \"../context/GlobalState\";\nimport { useContext } from \"react\";\n\nfunction Balance() {\n    const {transactions} = useContext(GlobalContext)\n    const total = transactions.map(item=>item.amount)\n    let balance = 0;\n    if(total.length !== 0){\n        balance = total.reduce((acc,item)=>acc+=item)\n    }\n    return (\n        <div >\n            <h4>Your Balance</h4>\n            <h1 id=\"balance\">${balance}</h1>\n        </div>\n    );\n}\n\nexport default Balance;","\nfunction Header() {\n  return (\n    <div >\n      <h2>\n        Expense Tracker\n      </h2>\n    </div>\n  );\n}\n\nexport default Header;","import { GlobalContext } from \"../context/GlobalState\";\nimport { useContext } from \"react\";\n\nfunction IncomeExpense() {\n    const {transactions} = useContext(GlobalContext)\n    const amounts = transactions.map(n=>n.amount)\n    let income=0;\n    let expense=0;\n    if(amounts){\n        amounts.forEach(amount=>{\n            if(amount >= 0){\n                income = income + amount\n            }else{\n                expense= expense+ amount\n            }\n            \n        })\n    }\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p id=\"money-plus\" className=\"money plus\">+${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p id=\"money-minus\" className=\"money minus\">-${expense}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default IncomeExpense;","import { useContext,useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nfunction TransactionList() {\n    const { transactions,deleteTransaction ,getTransactions} = useContext(GlobalContext)\n\n    useEffect(()=>{\n        getTransactions();\n        //eslint-disable\n    },[])\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul id=\"list\" className=\"list\">\n                {transactions.map(transaction => (\n                    <li key={transaction._id} className={transaction.amount >=0? 'plus':'minus'}>\n                        {transaction.text}\n                        <span>{transaction.amount}</span>\n                        <button onClick={()=>deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\n                    </li>\n                ))}\n\n            </ul>\n        </>\n    );\n}\n\nexport default TransactionList;","import './App.css';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpense from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport { useContext } from 'react'\nimport { GlobalProvider, GlobalContext } from './context/GlobalState'\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpense />\n          <TransactionList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalProvider>\n\n  )\n}\n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}