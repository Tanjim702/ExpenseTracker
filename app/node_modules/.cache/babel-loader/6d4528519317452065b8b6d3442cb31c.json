{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/tanjim/Projects/ExpenseTracker/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{GlobalContext}from\"../context/GlobalState\";import{useContext}from\"react\";import{useState}from'react';function AddTransaction(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add new transaction\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"form\",onSubmit:function onSubmit(e){e.preventDefault();addTransaction({id:Math.floor(Math.random()*1000000000),text:text,amount:amount});setText('');setAmount('');},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{value:text,onChange:function onChange(e){return setText(e.target.value);},type:\"text\",id:\"text\",placeholder:\"Enter text...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[\"Amount \",/*#__PURE__*/_jsx(\"br\",{}),\"(negative - expense, positive - income)\"]}),/*#__PURE__*/_jsx(\"input\",{value:amount,onChange:function onChange(e){return setAmount(parseFloat(e.target.value));},type:\"number\",id:\"amount\",placeholder:\"Enter amount...\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\"Add transaction\"})]})]});}export default AddTransaction;","map":{"version":3,"sources":["/home/tanjim/Projects/ExpenseTracker/app/src/components/AddTransaction.js"],"names":["GlobalContext","useContext","useState","AddTransaction","text","setText","amount","setAmount","addTransaction","e","preventDefault","id","Math","floor","random","target","value","parseFloat"],"mappings":"mNAAA,OAASA,aAAT,KAA8B,wBAA9B,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,QAASC,CAAAA,cAAT,EAA0B,eACAD,QAAQ,CAAC,EAAD,CADR,wCACjBE,IADiB,eACXC,OADW,8BAEIH,QAAQ,CAAC,EAAD,CAFZ,yCAEjBI,MAFiB,eAETC,SAFS,+BAGGN,UAAU,CAACD,aAAD,CAHb,CAGhBQ,cAHgB,aAGhBA,cAHgB,CAIxB,mBAEE,oCACE,2CADF,cAEE,cAAM,EAAE,CAAC,MAAT,CAAgB,QAAQ,CAAE,kBAACC,CAAD,CAAO,CAC/BA,CAAC,CAACC,cAAF,GACAF,cAAc,CAAC,CACbG,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,UAA3B,CADS,CAEbV,IAAI,CAAJA,IAFa,CAGbE,MAAM,CAANA,MAHa,CAAD,CAAd,CAKAD,OAAO,CAAC,EAAD,CAAP,CAAYE,SAAS,CAAC,EAAD,CAAT,CACb,CARD,wBASE,aAAK,SAAS,CAAC,cAAf,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,cAAO,KAAK,CAAEH,IAAd,CAAoB,QAAQ,CAAE,kBAAAK,CAAC,QAAIJ,CAAAA,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX,EAA/B,CACE,IAAI,CAAC,MADP,CACc,EAAE,CAAC,MADjB,CACwB,WAAW,CAAC,eADpC,EAFF,GATF,cAcE,aAAK,SAAS,CAAC,cAAf,wBACE,eAAO,OAAO,CAAC,QAAf,kCACQ,aADR,6CADF,cAKE,cAAO,KAAK,CAAEV,MAAd,CAAsB,QAAQ,CAAE,kBAAAG,CAAC,QAAIF,CAAAA,SAAS,CAACU,UAAU,CAACR,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX,CAAb,EAAjC,CAA4E,IAAI,CAAC,QAAjF,CAA0F,EAAE,CAAC,QAA7F,CAAsG,WAAW,CAAC,iBAAlH,EALF,GAdF,cAqBE,eAAQ,SAAS,CAAC,KAAlB,6BArBF,GAFF,GAFF,CA6BD,CAED,cAAeb,CAAAA,cAAf","sourcesContent":["import { GlobalContext } from \"../context/GlobalState\";\nimport { useContext } from \"react\";\nimport { useState } from 'react'\nfunction AddTransaction() {\n  const [text, setText] = useState('')\n  const [amount, setAmount] = useState('')\n  const { addTransaction } = useContext(GlobalContext)\n  return (\n\n    <div >\n      <h3>Add new transaction</h3>\n      <form id=\"form\" onSubmit={(e) => {\n        e.preventDefault();\n        addTransaction({\n          id: Math.floor(Math.random() * 1000000000),\n          text,\n          amount\n        });\n        setText('');setAmount('')\n      }} >\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input value={text} onChange={e => setText(e.target.value)}\n            type=\"text\" id=\"text\" placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n          >Amount <br />\n              (negative - expense, positive - income)</label\n          >\n          <input value={amount} onChange={e => setAmount(parseFloat(e.target.value))} type=\"number\" id=\"amount\" placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;"]},"metadata":{},"sourceType":"module"}