{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanjim/Projects/app/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\"; //Reducer\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE':\n      return { ...state,\n        transactions: state.transactions.filter(trans => trans.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AppReducer;\nconst initialState = {\n  transactions: [{\n    id: 1,\n    text: 'Book0',\n    amount: -10\n  }, {\n    id: 2,\n    text: 'Salary',\n    amount: 110\n  }, {\n    id: 3,\n    text: 'Book1',\n    amount: -10\n  }, {\n    id: 4,\n    text: 'Book2',\n    amount: -10\n  }]\n}; //Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c2 = GlobalProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"GlobalProvider\");","map":{"version":3,"sources":["/home/tanjim/Projects/app/src/context/GlobalState.js"],"names":["createContext","useReducer","AppReducer","state","action","type","transactions","filter","trans","id","payload","initialState","text","amount","GlobalContext","GlobalProvider","children","dispatch","deleteTransaction"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC,C,CACA;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFG,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAAN,CAAmBC,MAAnB,CAA0BC,KAAK,IAAEA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACM,OAArD;AAFZ,OAAN;;AAIJ;AACI,aAAOP,KAAP;AAPR;AASH,CAVD;;KAAMD,U;AAoBN,MAAMS,YAAY,GAAG;AACjBL,EAAAA,YAAY,EAAC,CACT;AAACG,IAAAA,EAAE,EAAC,CAAJ;AAAMG,IAAAA,IAAI,EAAC,OAAX;AAAmBC,IAAAA,MAAM,EAAC,CAAC;AAA3B,GADS,EAET;AAACJ,IAAAA,EAAE,EAAC,CAAJ;AAAMG,IAAAA,IAAI,EAAC,QAAX;AAAoBC,IAAAA,MAAM,EAAC;AAA3B,GAFS,EAGT;AAACJ,IAAAA,EAAE,EAAC,CAAJ;AAAMG,IAAAA,IAAI,EAAC,OAAX;AAAmBC,IAAAA,MAAM,EAAC,CAAC;AAA3B,GAHS,EAIT;AAACJ,IAAAA,EAAE,EAAC,CAAJ;AAAMG,IAAAA,IAAI,EAAC,OAAX;AAAmBC,IAAAA,MAAM,EAAC,CAAC;AAA3B,GAJS;AADI,CAArB,C,CAQA;;AACA,OAAO,MAAMC,aAAa,gBAAGd,aAAa,CAACW,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMI,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACxC,QAAM,CAACb,KAAD,EAAOc,QAAP,IAAmBhB,UAAU,CAACC,UAAD,EAAaS,YAAb,CAAnC,CADwC,CAExC;;AACA,WAASO,iBAAT,CAA2BT,EAA3B,EAA8B;AAC1BQ,IAAAA,QAAQ,CAAC;AACLZ,MAAAA,IAAI,EAAC,QADA;AAELK,MAAAA,OAAO,EAACD;AAFH,KAAD,CAAR;AAIH;;AACD,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BH,MAAAA,YAAY,EAACH,KAAK,CAACG,YADQ;AAE3BY,MAAAA;AAF2B,KAA/B;AAAA,cAIKF;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBM;;GAAMD,c;;MAAAA,c","sourcesContent":["import { createContext,useReducer } from \"react\";\n//Reducer\n\nconst AppReducer = (state,action)=>{\n    switch(action.type){\n        case 'DELETE':\n            return{\n                ...state,\n                transactions: state.transactions.filter(trans=>trans.id !== action.payload)\n            }\n        default:\n            return state\n    }\n}\n\n\n\n\n\n\n\n\n\nconst initialState = {\n    transactions:[\n        {id:1,text:'Book0',amount:-10},\n        {id:2,text:'Salary',amount:110},\n        {id:3,text:'Book1',amount:-10},\n        {id:4,text:'Book2',amount:-10},\n    ]\n};\n//Create context\nexport const GlobalContext = createContext(initialState)\n\n//Provider component\nexport const GlobalProvider = ({children})=>{\n    const [state,dispatch] = useReducer(AppReducer, initialState);\n    //Actions\n    function deleteTransaction(id){\n        dispatch({\n            type:'DELETE',\n            payload:id,\n        })\n    }\n    return(\n        <GlobalContext.Provider value={{\n            transactions:state.transactions,\n            deleteTransaction,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}