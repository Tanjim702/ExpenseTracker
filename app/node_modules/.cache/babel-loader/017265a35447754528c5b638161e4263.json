{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanjim/Projects/app/src/components/AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { useContext } from \"react\";\nimport { useState } from 'react';\n\nfunction AddTransaction() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState('');\n  const {\n    addTransaction\n  } = useContext(GlobalContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      onSubmit: e => {\n        e.preventDefault();\n        addTransaction({\n          id: Math.floor(Math.random() * 1000000000),\n          text,\n          amount\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          type: \"text\",\n          id: \"text\",\n          placeholder: \"Enter text...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), \"(negative - expense, positive - income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          type: \"number\",\n          id: \"amount\",\n          placeholder: \"Enter amount...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransaction, \"m/cmmMhUBWO+uhic/aitX2syrQE=\");\n\n_c = AddTransaction;\nexport default AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["/home/tanjim/Projects/app/src/components/AddTransaction.js"],"names":["GlobalContext","useContext","useState","AddTransaction","text","setText","amount","setAmount","addTransaction","e","preventDefault","id","Math","floor","random","target","value"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAqBP,UAAU,CAACD,aAAD,CAArC;AACA,sBAEE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,QAAQ,EAAGS,CAAD,IAAO;AAC/BA,QAAAA,CAAC,CAACC,cAAF;AACAF,QAAAA,cAAc,CAAC;AACbG,UAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,UAA3B,CADS;AAEbV,UAAAA,IAFa;AAGbE,UAAAA;AAHa,SAAD,CAAd;AAKD,OAPD;AAAA,8BAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEF,IAAd;AAAoB,UAAA,QAAQ,EAAEK,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAA1C;AACE,UAAA,IAAI,EAAC,MADP;AACc,UAAA,EAAE,EAAC,MADjB;AACwB,UAAA,WAAW,EAAC;AADpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAaE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CACQ;AAAA;AAAA;AAAA;AAAA,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAO,UAAA,KAAK,EAAEV,MAAd;AAAsB,UAAA,QAAQ,EAAEG,CAAC,IAAIF,SAAS,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAA9C;AAAgE,UAAA,IAAI,EAAC,QAArE;AAA8E,UAAA,EAAE,EAAC,QAAjF;AAA0F,UAAA,WAAW,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAoBE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA4BD;;GAhCQb,c;;KAAAA,c;AAkCT,eAAeA,cAAf","sourcesContent":["import { GlobalContext } from \"../context/GlobalState\";\nimport { useContext } from \"react\";\nimport { useState } from 'react'\nfunction AddTransaction() {\n  const [text, setText] = useState('')\n  const [amount, setAmount] = useState('')\n  const { addTransaction } = useContext(GlobalContext)\n  return (\n\n    <div >\n      <h3>Add new transaction</h3>\n      <form id=\"form\" onSubmit={(e) => {\n        e.preventDefault();\n        addTransaction({\n          id: Math.floor(Math.random() * 1000000000),\n          text,\n          amount\n        })\n      }} >\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input value={text} onChange={e => setText(e.target.value)}\n            type=\"text\" id=\"text\" placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n          >Amount <br />\n              (negative - expense, positive - income)</label\n          >\n          <input value={amount} onChange={e => setAmount(e.target.value)} type=\"number\" id=\"amount\" placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;"]},"metadata":{},"sourceType":"module"}