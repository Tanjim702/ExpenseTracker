{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tanjim/Projects/ExpenseTracker/app/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport axios from \"axios\"; //Reducer\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_TRANSACTIONS':\n      console.log(state);\n      return { ...state,\n        loading: false,\n        transactions: action.payload\n      };\n\n    case 'ERROR':\n      return { ...state,\n        error: action.payload\n      };\n\n    case 'DELETE':\n      return { ...state,\n        transactions: state.transactions.filter(trans => trans._id !== action.payload)\n      };\n\n    case 'ADD':\n      return { ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AppReducer;\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; //Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    await axios.delete(`/api/v1/${id}`);\n\n    try {\n      dispatch({\n        type: 'DELETE',\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(trans) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/', trans, config);\n      dispatch({\n        type: 'ADD',\n        payload: trans\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      loading: state.loading,\n      error: state.error,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c2 = GlobalProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"GlobalProvider\");","map":{"version":3,"sources":["/home/tanjim/Projects/ExpenseTracker/app/src/context/GlobalState.js"],"names":["createContext","useReducer","axios","AppReducer","state","action","type","console","log","loading","transactions","payload","error","filter","trans","_id","initialState","GlobalContext","GlobalProvider","children","dispatch","getTransactions","res","get","data","err","response","deleteTransaction","id","delete","addTransaction","config","headers","post"],"mappings":"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","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\n//Reducer\n\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'GET_TRANSACTIONS':\n            console.log(state)\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case 'DELETE':\n            return {\n                ...state,\n                transactions: state.transactions.filter(trans => trans._id !== action.payload)\n            }\n        case 'ADD':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n        default:\n            return state\n    }\n}\n\n\n\n\n\n\n\n\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n};\n//Create context\nexport const GlobalContext = createContext(initialState)\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    //Actions\n\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/');\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            })\n        } catch (err) {\n            dispatch({\n                type: 'ERROR',\n                payload: err.response.data.error,\n            })\n        }\n    }\n    async function deleteTransaction(id) {\n        await axios.delete(`/api/v1/${id}`)\n        try {\n            dispatch({\n                type: 'DELETE',\n                payload: id,\n            })\n\n        } catch (error) {\n            dispatch({\n                type: 'ERROR',\n                payload: error.response.data.error,\n            })\n        }\n    }\n    async function addTransaction(trans) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/v1/', trans, config)\n            dispatch({\n                type: 'ADD',\n                payload: trans,\n            })\n\n        } catch (err) {\n            dispatch({\n                type: 'ERROR',\n                payload: err.response.data.error,\n            })\n        }\n    }\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            loading: state.loading,\n            error: state.error,\n            getTransactions,\n\n            deleteTransaction,\n            addTransaction,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}