[{"/home/tanjim/Projects/ExpenseTracker/app/src/index.js":"1","/home/tanjim/Projects/ExpenseTracker/app/src/App.js":"2","/home/tanjim/Projects/ExpenseTracker/app/src/reportWebVitals.js":"3","/home/tanjim/Projects/ExpenseTracker/app/src/components/Header.js":"4","/home/tanjim/Projects/ExpenseTracker/app/src/components/Balance.js":"5","/home/tanjim/Projects/ExpenseTracker/app/src/components/AddTransaction.js":"6","/home/tanjim/Projects/ExpenseTracker/app/src/components/TransactionList.js":"7","/home/tanjim/Projects/ExpenseTracker/app/src/context/GlobalState.js":"8","/home/tanjim/Projects/ExpenseTracker/app/src/components/IncomeExpenses.js":"9"},{"size":500,"mtime":1609225421000,"results":"10","hashOfConfig":"11"},{"size":707,"mtime":1609512256341,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609225421000,"results":"13","hashOfConfig":"11"},{"size":131,"mtime":1609417127274,"results":"14","hashOfConfig":"11"},{"size":485,"mtime":1609420783152,"results":"15","hashOfConfig":"11"},{"size":1271,"mtime":1609421355172,"results":"16","hashOfConfig":"11"},{"size":884,"mtime":1609492396579,"results":"17","hashOfConfig":"11"},{"size":2769,"mtime":1609492333778,"results":"18","hashOfConfig":"11"},{"size":884,"mtime":1609421401852,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"wqff3m",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/tanjim/Projects/ExpenseTracker/app/src/index.js",[],["42","43"],"/home/tanjim/Projects/ExpenseTracker/app/src/App.js",["44","45"],"/home/tanjim/Projects/ExpenseTracker/app/src/reportWebVitals.js",[],"/home/tanjim/Projects/ExpenseTracker/app/src/components/Header.js",[],"/home/tanjim/Projects/ExpenseTracker/app/src/components/Balance.js",[],"/home/tanjim/Projects/ExpenseTracker/app/src/components/AddTransaction.js",[],["46","47"],"/home/tanjim/Projects/ExpenseTracker/app/src/components/TransactionList.js",["48"],"import { useContext,useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nfunction TransactionList() {\n    const { transactions,deleteTransaction ,getTransactions} = useContext(GlobalContext)\n\n    useEffect(()=>{\n        getTransactions();\n        //eslint-disable\n    },[])\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul id=\"list\" className=\"list\">\n                {transactions.map(transaction => (\n                    <li key={transaction._id} className={transaction.amount >=0? 'plus':'minus'}>\n                        {transaction.text}\n                        <span>{transaction.amount}</span>\n                        <button onClick={()=>deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\n                    </li>\n                ))}\n\n            </ul>\n        </>\n    );\n}\n\nexport default TransactionList;","/home/tanjim/Projects/ExpenseTracker/app/src/context/GlobalState.js",["49"],"import { createContext, useReducer } from \"react\";\nimport axios from \"axios\";\n//Reducer\n\nconst AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'GET_TRANSACTIONS':\n            console.log(state)\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case 'DELETE':\n            return {\n                ...state,\n                transactions: state.transactions.filter(trans => trans._id !== action.payload)\n            }\n        case 'ADD':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n        default:\n            return state\n    }\n}\n\n\n\n\n\n\n\n\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n};\n//Create context\nexport const GlobalContext = createContext(initialState)\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    //Actions\n\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/');\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            })\n        } catch (err) {\n            dispatch({\n                type: 'ERROR',\n                payload: err.response.data.error,\n            })\n        }\n    }\n    async function deleteTransaction(id) {\n        await axios.delete(`/api/v1/${id}`)\n        try {\n            dispatch({\n                type: 'DELETE',\n                payload: id,\n            })\n\n        } catch (error) {\n            dispatch({\n                type: 'ERROR',\n                payload: error.response.data.error,\n            })\n        }\n    }\n    async function addTransaction(trans) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/v1/', trans, config)\n            dispatch({\n                type: 'ADD',\n                payload: trans,\n            })\n\n        } catch (err) {\n            dispatch({\n                type: 'ERROR',\n                payload: err.response.data.error,\n            })\n        }\n    }\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            loading: state.loading,\n            error: state.error,\n            getTransactions,\n\n            deleteTransaction,\n            addTransaction,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}","/home/tanjim/Projects/ExpenseTracker/app/src/components/IncomeExpenses.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":10,"nodeType":"56","messageId":"57","endLine":7,"endColumn":20},{"ruleId":"54","severity":1,"message":"58","line":8,"column":26,"nodeType":"56","messageId":"57","endLine":8,"endColumn":39},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":7,"nodeType":"63","endLine":9,"endColumn":9,"suggestions":"64"},{"ruleId":"54","severity":1,"message":"65","line":92,"column":19,"nodeType":"56","messageId":"57","endLine":92,"endColumn":22},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'GlobalContext' is defined but never used.",["66"],["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTransactions'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [getTransactions]",{"range":"71","text":"72"},[299,301],"[getTransactions]"]